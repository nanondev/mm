{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"fundame",
				"fundamental"
			],
			[
				"hasMult",
				"hasMultipleVoices"
			],
			[
				"Funda",
				"fundamentalIndex"
			],
			[
				"fundamen",
				"fundamentalIndex"
			],
			[
				"measure",
				"measure-count"
			],
			[
				"modifi",
				"accidentalModifier"
			],
			[
				"modifieR",
				"ACCIDENTAL_MODIFIER_NONE"
			],
			[
				"create",
				"createContext"
			],
			[
				"accidenta",
				"accidentalModifier"
			],
			[
				"parell",
				"parallels"
			],
			[
				"partial",
				"partial_durations"
			],
			[
				"beat",
				"beatSeconds"
			],
			[
				"transpon",
				"transposeDistance"
			],
			[
				"MusicNode",
				"MusicNodeTag"
			],
			[
				"get_cal",
				"get_class"
			],
			[
				"duratio",
				"duration"
			],
			[
				"node_reduce",
				"node_reduce_pass"
			],
			[
				"toStringNodes",
				"toStringNodesWith"
			],
			[
				"toStri",
				"toStringNodes"
			],
			[
				"toStringC",
				"toStringComplementary"
			],
			[
				"abc2",
				"abc2midi_runner"
			],
			[
				"mm_de",
				"mm_debug_enabled"
			],
			[
				"nodes",
				"nodesStr"
			],
			[
				"toString",
				"toStringSeparator"
			],
			[
				"patia",
				"partial_nodes"
			],
			[
				"IDINS",
				"IDINSCRIPCION"
			],
			[
				"idInsp",
				"idInscripcionFiltro"
			],
			[
				"id",
				"idinscripcion_activo"
			],
			[
				"tipo",
				"tipopersona_change"
			],
			[
				"docu",
				"documentoProveedor"
			],
			[
				"docuemntoca",
				"documentosCatalogo"
			],
			[
				"idPR",
				"idProveedor"
			],
			[
				"IDDOCUMENT",
				"IDDOCUMENTOPROVEEDORCATALOGO"
			],
			[
				"idPROV",
				"IDPROVEEDOR"
			],
			[
				"IDPROV",
				"IDPROVEEDOR"
			],
			[
				"IDPRO",
				"IDPROVEEDOR"
			],
			[
				"docuemntoRE",
				"documentoRechazado"
			],
			[
				"ID",
				"IDDOCUMENTOPROVEEDORCATALOGO"
			],
			[
				"idDo",
				"idDocumentoProveedorCatalogo"
			],
			[
				"estadoRe",
				"estadoRevision"
			],
			[
				"comentario",
				"comentarioRevisionArr"
			],
			[
				"idDoc",
				"idDocumentoProveedorCatalogoArr"
			],
			[
				"idDocu",
				"idDocumentoProveedorArr"
			],
			[
				"ingresoAUtor",
				"ingresoAutorizadoOnlineBool"
			],
			[
				"indica",
				"indicaRevisionTarea"
			],
			[
				"DOCUMENTOPRO",
				"DEDOCUMENTOPROVEEDORCATALOGO"
			],
			[
				"CONE",
				"conectorDB"
			],
			[
				"fila",
				"fila_oculta"
			],
			[
				"puntaje",
				"puntaje_check_entre"
			],
			[
				"calcul",
				"calcular_check_count"
			],
			[
				"check",
				"check_count"
			],
			[
				"calcular",
				"calcular_puntaje_checks"
			],
			[
				"insert",
				"insert_query"
			],
			[
				"tabla",
				"tabla_original"
			],
			[
				"array_key",
				"array_key_exists"
			],
			[
				"PORCE",
				"LEGAJO_PORCENTAJEPARTICIPACION"
			],
			[
				"LEGAJO",
				"LEGAJO_MODULO4"
			],
			[
				"LEGAO",
				"LEGAJO_MODULO3"
			],
			[
				"suf",
				"sufijo"
			],
			[
				"columna",
				"columna_tamano"
			],
			[
				"extra",
				"extra_class"
			],
			[
				"condi",
				"condicional_si_change"
			],
			[
				"peri",
				"periodofin"
			],
			[
				"valor_",
				"valor_guardado"
			],
			[
				"MODULO4",
				"LEGAJO_MODULO4"
			],
			[
				"LEJ",
				"LEGAJO_MODULO4"
			],
			[
				"sufijo",
				"sufijo_input"
			],
			[
				"prefijo",
				"prefijo_input"
			],
			[
				"seleccionado",
				"seleccionado_str"
			],
			[
				"existe",
				"existe_columna"
			],
			[
				"insert_",
				"insert_keys"
			],
			[
				"valor",
				"valor_str"
			],
			[
				"contro",
				"control_tabla"
			],
			[
				"CALCU",
				"calculo_monto"
			],
			[
				"generar_schema",
				"generar_schema_control"
			],
			[
				"ing",
				"ingresoAutorizadoOnline"
			],
			[
				"output",
				"outputCsv"
			],
			[
				"filtro_",
				"filtro_altas"
			],
			[
				"array_ke",
				"array_key_exists"
			],
			[
				"inpu",
				"inputPasswordRepeat"
			],
			[
				"out",
				"output_files"
			],
			[
				"REFR",
				"refresh_link"
			],
			[
				"refresh",
				"refresh_link"
			],
			[
				"veri",
				"verificarSesionInicio"
			],
			[
				"tiempo",
				"tiempo_timeout"
			],
			[
				"Proved",
				"proveedor_planificacion"
			],
			[
				"proo",
				"proveedor_planificacion"
			],
			[
				"blaqueo",
				"blanqueo_nouser"
			],
			[
				"blanqeuo",
				"blanqueo_age"
			],
			[
				"blanque",
				"blanqueo_hash"
			],
			[
				"destina",
				"destinatario2"
			],
			[
				"debug",
				"debug_email"
			],
			[
				"destinat",
				"destinatario1"
			],
			[
				"desti",
				"destinatario2"
			],
			[
				"consularpor",
				"consultarListadoProveedoresRiesgoServicio"
			],
			[
				"DESC",
				"DESCRIPCION"
			],
			[
				"activo",
				"activoCols"
			],
			[
				"activo3",
				"activo3_extra"
			],
			[
				"desc",
				"DESCRIPCION"
			],
			[
				"activ",
				"activo3_vals_extra"
			],
			[
				"c",
				"cuEmpleado"
			],
			[
				"idEmpleadoEsta",
				"idEmpleadoEstadoDoc"
			],
			[
				"etiqueta",
				"etiquetaCodigo"
			],
			[
				"idact",
				"idactivotipo"
			],
			[
				"backg",
				"background-color\tproperty"
			],
			[
				"start",
				"start_line"
			],
			[
				"tra",
				"trace_frags"
			],
			[
				"trace",
				"trace_lines"
			],
			[
				"as",
				"asinh"
			],
			[
				"autor",
				"autorizacion_numerica"
			],
			[
				"ida",
				"idactivotipo"
			],
			[
				"COI",
				"CODIGOMAQUINARIA"
			],
			[
				"CODIGO",
				"CODIGOVEHICULO"
			],
			[
				"cuit",
				"cuitduplicado"
			],
			[
				"param",
				"param_output"
			],
			[
				"IDPR",
				"IDPROVEEDOR"
			],
			[
				"accio",
				"accion_forzar_cierre"
			],
			[
				"cantidad",
				"CANTIDADARCHIVOS"
			],
			[
				"conect",
				"conectorDB"
			],
			[
				"base64",
				"base64_encode"
			],
			[
				"_",
				"_GET"
			],
			[
				"LL_CLIENT_",
				"ll_client_active"
			],
			[
				"ll_client",
				"ll_client_id"
			],
			[
				"store",
				"store_picture_from_file"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "<?php\nnamespace nan\\mm\\abc;\nuse nan\\mm;\nuse nan\\mm\\reduce;\nuse nan\\mm\\measure;\nuse nan\\mm\\transpose;\nuse nan\\mm\\merge;\nuse nan\\mm\\arp;\n\nclass AbcNs {}\n\nclass AbcContext extends measure\\MeasureContext {\n\tvar $voice=0;\n\n\tfunction hasMultipleVoices() {\n\t\treturn $this->voice!=0;\n\t}\n\n\tfunction withVoice($index) {\n\t\t$m=clone $this;\n\t\t$m->voice=$index;\n\t\treturn $m;\n\t}\n\n\tfunction voice() {\n\t\treturn $this->voice;\n\t}\n}\n\nclass StringContext  {}\n\nclass StringReducer {\n\tfunction reduce_nodes($nodes,$c) {\n\t\t$s=\"\";\n\t\tif (!is_array($nodes)) warn(\"wrong argument: $nodes\");\n\t\tforeach ($nodes as $mi) {\n\t\t\t$s.=$this->reduce($mi);\n\t\t}\n\t\treturn $s;\t\n\t}\n\n\tfunction reduce($m,$c=null) {\n\t\tif ($c==null) {\n\t\t\t$c=$this->createContext();\n\t\t}\n\t\t$fn=\"reduce_\".($m->name());\n\t\tif (!method_exists($this,$fn)) {\n\t\t\t$fn=\"reduce_pass\";\n\t\t}\n\t\t$s=$this->$fn($m,$c);\n\t\treturn $s;\n\t}\n\n\tfunction createContext() {\n\t\treturn new StringContext();\n\t}\n\n}\n\nclass AbcPrepareReducer extends reduce\\ChainReducer {\n\tpublic static function create() {\n\n\t\t$r=(new AbcPrepareReducer())\n\t\t\t->withReducer(new arp\\ArpReducer())\n\t\t\t->withReducer(new measure\\MeasureReducer())\n\t\t\t->withReducer(new transpose\\TransposeReducer())\n\t\t\t->withReducer(new merge\\MergeReducer());\n\n\t\treturn $r;\n\t}\n}\n\nclass AbcTranslator extends StringReducer {\n\tfunction reduce_tempo($m,$c) {\n\t\t$nodes=$m->nodes();\t\n\t\t$n=$m->beatNote();\n\t\t$m=$m->beatsByMinute();\n\t\t$s=\"T:$n $m\\n\";\n\t\t$s.=$this->reduce_nodes($nodes,$c);\n\t\treturn $s;\n\t}\n\n\tfunction reduce_time($m,$c) {\n\t\t$nodes=$m->nodes();\t\n\t\t$q=$m->quantity();\n\t\t$d=$m->duration();\n\t\t$s=\"M:$q/$d\\n\";\n\t\t$s.=$this->reduce_nodes($nodes,$c);\n\t\treturn $s;\t\n\t}\n\tfunction reduce_key($m,$c) {\n\t\t$nodes=$m->nodes();\t\n\t\t$k=$m->key();\n\t\t$s=\"K:$k\\n\";\n\t\t$s.=$this->reduce_nodes($nodes,$c);\n\t\treturn $s;\n\t}\n\n\tfunction reduce_rep($m,$c) {\n\t\t$nodes=$m->nodes();\t\n\t\t$s=\"\";\n\t\tfor($i=0;$i<$m->reps();$i++) {\n\t\t\tfor ($j=0;$j<count($nodes);$j++) {\n\t\t\t\t$s.=$this->reduce($nodes[$j],$c);\n\t\t\t}\n\t\t}\n\t\treturn $s;\n\t}\n\n\tfunction reduce_then($m,$c) {\n\t\treturn $this->reduce_nodes($m->nodes(),$c);\n\t}\n\n\tfunction reduce_header($m,$c) {\n\t\t$nodes=$m->nodes();\n\t\t$header=$m->header();\n\t\t$composer=$header[\"composer\"];\t\n\t\t$title=$header[\"title\"];\n\t\t$s=\"X:1\\nT:$title\\nC:$composer\\n\";\n\t\treturn $s.$this->reduce_nodes($m->nodes(),$c);\n\t}\n\n\tfunction reduce_note($m,$c) {\n\t\t$t=$m->tag()->transposeDistance();\n\t\t$up=($t>0);\n\t\t$down=($t<0);\n\t\t$o=abs($t)/12;\n\n\t\t$octave_suffix=\"\";\n\t\tif ($up) {\n\t\t\twhile ($o-->0) {$octave_suffix.=\"'\";};\n\t\t}\n\t\tif ($down) {\n\t\t\twhile ($o-->0) {$octave_suffix.=\",\";};\n\t\t}\n\t\treturn $m->accidental().$m->note().$m->toStringDuration().$octave_suffix;\n\t}\n\n\tfunction reduce_merge($m,$c) { // TODO URG mergear todos\n\t\t$nodes=$m->nodes();\n\t\t$s=\"\";\n\t\tforeach($nodes as $ni) {\n\t\t $s.=$this->reduce($ni,$c);\n\t\t}\n\t\treturn $s;\n\t}\n\n\tfunction reduce_measure($m,$c) {\n\t\t//print \"reduce_measure: \".($m->toStringTree()).\"\\n\";\n\t\t$s=\"\";\n\t\tif ($c->hasMultipleVoices()) {\n\t\t\t\tif ($c->voice()>1) $s.=\";\";\n\t\t\t\t$s.=\"(\".($this->reduce_nodes($m->nodes(),$c)).\")\";\n\t\t} else {\n\t\t\t\t$s.=\"|\".($this->reduce_nodes($m->nodes(),$c));\t\t\t\n\t\t}\n\t\treturn $s;\n\t}\n\n\tfunction reduce_parallel($m,$c) {\n\t\t//print \"reduce_measure: \".($m->toStringTree()).\"\\n\";\n\t\t$s=\"|\";\n\t\t$index=1;\n\t\tforeach($m->nodes() as $ni) {\n\t\t\t$ci=$c->withVoice($index);\n\t\t\t$s.=\"\".($this->reduce($ni,$ci)).\"\";\n\t\t\t++$index;\n\t\t}\n\n\t\treturn $s;\n\t}\n\n\tfunction reduce_pass($m,$c) {\n\t\treturn $this->reduce_nodes($m->nodes,$c);\n\t}\n\n\tpublic static function create() {\n\t\treturn new AbcTranslator();\n\t}\n\n\tfunction createContext() {\n\t\treturn new AbcContext();\n\t}\n}\n \nclass AbcReducer extends StringReducer {\n\tfunction reduce($m,$c=null) {\n\t\tif ($c==null) $c=$this->createContext();\n\n\t\t$prepareReducer=AbcPrepareReducer::create();\n\t\t$translator=AbcTranslator::create();\n\n\t\t$mp=$prepareReducer->reduce($m);\n\t\t$abc=$translator->reduce($mp);\n\t\treturn $abc;\n\t}\t\n}\n\nfunction abc2midi($abcfile) {\n\t$abc2midi_runner=\"\\\"C:\\\\Program Files (x86)\\\\runabc\\\\abc2midi.exe\\\"\";\n\t$abc2midi_cmd=\"$abc2midi_runner $abcfile -o $abcfile.midi\";\n\t$out=array();\n\t$ret=-1;\n\tmm\\debug(\"abc2midi cmd: $abc2midi_cmd\");\n\t$res=exec($abc2midi_cmd,$out,$ret);\n\t//print_r($out);\n}\n\nfunction abc_store($abcstr,$abcfile) {\n\tfile_put_contents($abcfile,$abcstr);\n}\n\n?>\n",
			"file": "nan/mm/abc/abc.php",
			"file_size": 4421,
			"file_write_time": 132277248592630680,
			"settings":
			{
				"buffer_size": 4208,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php\nnamespace nan\\mm\\transpose;\nuse nan\\mm;\nuse nan\\mm\\reduce;\n\nclass TransposeContext {\n\tvar $transposeDistance;\n\tfunction __construct($transposeDistance=0) {\n\t\t$this->transposeDistance=$transposeDistance;\n\t}\n\n\tfunction withTransposeDistance($transposeDistance) {\n\t\treturn new TransposeContext($transposeDistance);\n\t}\n\tfunction transposeDistance() {\n\t\treturn $this->transposeDistance;\n\t}\n\tfunction __toString() {\n\t\treturn sprintf(\"AbcContext <tr:%s>\",$this->transposeDistance);\n\t}\n}\n\nclass TransposeReducer extends reduce\\NodeReducer {\n\tfunction reduce_transpose($m,$c,$transposeDistance) {\t\n\t\t$co=$c->withTransposeDistance($c->transposeDistance()+$transposeDistance);\n\t\tif (count($m->nodes())>0) {\n\t\t\t$mo=new mm\\then($this->reduce_nodes($m->nodes(),$co));\n\t\t} else {\n\t\t\t$mo=$m->uniqueNode();\n\t\t}\n\t\treturn $mo->withNodes($this->reduce_nodes($mo->nodes(),$co));\n\t}\n\n\tfunction reduce_up8th($m,$c) {\n\t\treturn $this->reduce_transpose($m,$c,12);\n\t}\n\n\tfunction reduce_down8th($m,$c) {\n\t\treturn $this->reduce_transpose($m,$c,-12);\n\t}\n\n\tfunction reduce_note($m,$c) {\t\n\t\tif ($c->transposeDistance()!=0) {\n\t\t\t$newTag=$m->tag()->withTransposeDistance($c->transposeDistance());\n\t\t\t$rr= \n\t\t\t\t$m->withTag($newTag)->withNodes($this->reduce_nodes($m->nodes(),$c));\n\t\t\t\t // pasamos la etiqueta de transposición de contexto al nodo.\t\t\n\t\t\treturn $rr;\n\t\t} else {\n\t\t\treturn $this->reduce_pass($m,$c);\n\t\t}\n\t}\n\n\tfunction createContext() {\n\t\treturn new TransposeContext();\n\t}\n}\n\n?>",
			"file": "nan/mm/transpose/transpose.php",
			"file_size": 1519,
			"file_write_time": 132277247200990646,
			"settings":
			{
				"buffer_size": 1460,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "nan/mm/merge/merge.php",
			"settings":
			{
				"buffer_size": 560,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php \nnamespace nan\\mm\\arp;\nuse nan\\mm;\nuse nan\\mm\\reduce;\n\nclass ArpNs {}\n\nclass ArpReducer extends reduce\\NodeReducer {\n\tfunction reduce_arp($m,$c) {\n\t\t$chord=$m->chord();\n\t\t$chordNotes=$chord->nodes();\n\n\t\t$length=$m->lengthInNotes();\n\t\t$orderPattern=$m->orderPattern();\n\t\t$notes=[];\n\t\tfor ($i=0;$i<$length;$i++) {\n\t\t\t$patternIndex=$orderPattern[$i%count($orderPattern)];\n\t\t\t$note=$chordNotes[$patternIndex%count($chordNotes)];\n\t\t\t$notes[]=new mm\\note($note);\n\t\t}\n\t\treturn new mm\\then($notes);\n\t}\n}\n\n ?>\n",
			"file": "nan/mm/arp/arp.php",
			"file_size": 532,
			"file_write_time": 132276728583759675,
			"settings":
			{
				"buffer_size": 507,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php \nnamespace nan\\mm\\chord;\nuse nan\\mm;\nuse nan\\mm\\reduce;\n\nclass ChordNs {}\n\nclass chord extends mm\\MusicNode {\n\tfunction __construct($nodes=[]) {\n\t\tparent::__construct(\"chord\",$nodes);\n\t}\n\n\n\tstatic function american($name) {\n\t\t$notes=[];\n\t\t$base=[\"C\"=>0,\"D\"=>1,\"E\"=>2,\"F\"=>3,\"G\"=>4,\"A\"=>5,\"B\"=>6];\n\t\t$baseInv=[0=>\"C\",1=>\"D\",2=>\"E\",3=>\"F\",4=>\"G\",5=>\"A\",\"B\"=>6];\n\t\t\n\t\t\n\t\tpreg_match(\"/([_=^]?)([ABCDEFG])(m?)/\",$name,$chord_match);\n\t\t\n\t\t$accidentalModifier=note::ACCIDENTAL_MODIFIER_NONE;\n\t\tif ($chord_match[1]==\"_\") $accidentalModifier=-1;\n\t\tif ($chord_match[1]==\"=\") $accidentalModifier=0;\n\t\tif ($chord_match[1]==\"^\") $accidentalModifier=1;\n\t\t\n\t\t$fundamental=$chord_match[2];\n\t\t$isMinor=strlen($chord_match[2])>0;\n\n\t\t$fundamentalIndex=$base[$fundamental];\n\t\t\n\t\t$notes[]=new mm\\note($fundamental,$accidentalModifier);\n\t\t$notes[]=new mm\\note($baseInv[$fundamentalIndex+2]);\n\t\t$notes[]=new mm\\note($baseInv[$fundamentalIndex+4]);\n\t\t$m=new chord($notes);\n\t\treturn $m;\n\t}\n}\n\nfunction amchord($name) {\n\treturn chord::american($name);\n}\n?>",
			"file": "nan/mm/chord/chord.php",
			"file_size": 1078,
			"file_write_time": 132277615129016676,
			"settings":
			{
				"buffer_size": 1036,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php\n/*\n * PENDIENTE:\n * HECHO - soporte e tags en nodos\n * HECHO - implementar: down8th, up8th\n * HECHO - measure: debería tener en cuenta longitud de notas \n * HECHO - mejorar arquitectura de reducciones: debería ser pipeline ?\n * HECHO - measure: deberia usar reduce\n * HECHO - abc: separar reduce y measure ? esta desordenado así como está\n * HECHO soporte de notas fraccionadas (sub-negras)\n * - nombres de clase: respetar case\n * - implementar merge (voces simultaneas)\n * - completar casos de test para lo ya hecho\n * - notacion de acordes\n * - precondicion de reducciones  \n */\nnamespace nan\\mm;\n\n$debug_enabled=true;\n$warn_enabled=true;\n\nclass MmNs {}\n\nclass MusicNodeTag {\n\tvar $transposeDistance;\n\tfunction __construct($transposeDistance=0) {\n\t\t$this->transposeDistance=$transposeDistance;\n\t}\n\n\tfunction withTransposeDistance($transposeDistance) {\n\t\treturn new MusicNodeTag($transposeDistance);\n\t}\n\tfunction transposeDistance() {\n\t\treturn $this->transposeDistance;\n\t}\n\tfunction __toString() {\n\t\tif ($this->transposeDistance!=0) {\n\t\t\treturn sprintf(\"<tr:%s>\",$this->transposeDistance);\n\t\t} else {\n\t\t\treturn \"\";\n\t\t}\n\t}\n}\n\n/* \n * base para nodos del arbol musical.\n *\n * propiedades:\n * -es inmutable\n * \n */\nclass MusicNode {\n\tvar $name;\n\tvar $tag;\n\tvar $nodes=array();\n\n\tfunction __construct($name,$nodes=array(),$tag=null) {\n\t\t$this->name=$name;\n\t\tif (!is_array($nodes)) $nodes=array($nodes);\n\t\tif ($tag==null) $tag=new MusicNodeTag();\n\t\t$this->nodes=$nodes;\n\t\t$this->tag=$tag;\n\t}\t\n\n\tfunction name() {\n\t\treturn $this->name;\n\t}\n\tfunction nodes() {\n\t\treturn $this->nodes;\n\t}\n\n\tfunction withNodes($nodes) {\n\t\t$mm=clone $this;\n\t\t$mm->nodes=$nodes;\n\t\treturn $mm;\n\t}\t\n\n\tfunction addNode($node) {\n\t\t$mm=clone $this;\n\t\t$mm->nodes=$this->nodes;\n\t\t$mm->nodes[]=$node;\n\t\treturn $mm;\n\t}\n\n\tfunction wrap($m) {\n\t\t$wrapped=$m->withNodes([$this]);\n\t\treturn $wrapped;\n\t}\n\n\tfunction withTag($tag) {\n\t\t//throw new exception(\"class must implement withTag: \".get_class($this));\n\t\t$mm=clone $this;\n\t\t$mm->tag=$tag;\n\t\treturn $mm;\n\t}\n\n\tfunction tag() {\n\t\treturn $this->tag;\n\t}\n\n\tfunction hasNodes() {\n\t\treturn count($this->nodes)>0;\n\t}\n\tfunction uniqueNode() {\n\t\tif (count($this->nodes())>1) {\n\t\t\terr(\"unique node expected, but many found: $m\");\n\t\t} else if (count($this->nodes())==0) {\n\t\t\terr(\"unique node expected, but none found: $m\");\n\t\t}\n\t\treturn $this->nodes[0];\n\t}\n\n\tfunction firstNode() {\n\t\treturn $this->nodes[0];\t\t\n\t}\n\n\tfunction __toString() {\n\t\treturn $this->toStringCompact();\n\t}\n\t\n\tfunction toStringTree() {\n\t\t$str=sprintf(\"%s:%s%s%s \",$this->name(),$this->toStringComplementary(),$this->tag->__toString(),$this->toStringNodes(true));\n\t\treturn $str;\n\t}\n\n\tfunction toStringCompact() {\n\t\t$name=$this->name;\n\t\t$compl=$this->toStringComplementary();\n\t\t$separator=$this->toStringSeparator();\n\t\t$nodesStr=$this->toStringNodes();\n\t\treturn sprintf('%s%s%s%s%s',$name,$separator,$compl,$this->tag->__toString(),$nodesStr);\n\t}\n\n\n\tfunction toStringNodes($asTree=false) {\n\t\t$nodesStr=\"\";\n\t\t$separator=$this->toStringSeparator();\n\t\tforeach($this->nodes() as $ni) {\n\t\t\t$nodesStr.=sprintf(\"%s%s\",$asTree ? $ni->toStringTree() : $ni->__toString(),$separator);\n\t\t}\t\t\t\n\t\tif (count($this->nodes())>1) {\n\t\t\t$nodesStr=\"[$nodesStr]\";\n\t\t}\t\t\n\t\treturn $nodesStr;\n\t}\n\n\tfunction toStringSeparator() {\n\t\treturn \" \";\n\t}\t\n\n\tfunction toStringComplementary() {\n\t\treturn \"\";\n\t}\n}\n\nclass time extends MusicNode {\n\tvar $quantity;\n\tvar $duration;\n\n\tfunction __construct($quantity,$duration,$nodes=[]) {\n\t\tparent::__construct(\"time\",$nodes);\n\t\t$this->quantity=$quantity;\n\t\t$this->duration=$duration;\n\t}\n\n\tfunction quantity() {\n\t\treturn $this->quantity;\n\t}\n\tfunction duration() {\n\t\treturn $this->duration;\n\t}\n\n\tfunction  toStringCompact() {\n\t\treturn sprintf(\"(%s/%s)(%s)%s\",$this->quantity,$this->duration,$this->toStringNodes(),$this->tag());\n\t}\n}\n\nclass measure extends MusicNode {\n\n\tfunction __construct($nodes) {\n\t\tparent::__construct(\"measure\",$nodes);\n\t}\n\n\tfunction toStringCompact() {\n\t\treturn \"|\".($this->toStringNodes()).$this->tag();\n\t}\n}\n\n\nclass then extends MusicNode {\n\n\tfunction __construct($nodes) {\n\t\tparent::__construct(\"then\",$nodes);\n\t}\n\n\tfunction toStringCompact() {\n\t\treturn \"\".($this->toStringNodes());\n\t}\n\tfunction toStringSeparator() {\n\t\treturn \"\";\n\t}\n}\n\nclass header extends MusicNode {\n\tvar $header;\n\tfunction __construct($header,$nodes=[]) {\n\t\tparent::__construct(\"header\",$nodes);\n\t\t$this->header=$header;\n\t}\n\n\tfunction header() {\n\t\treturn $this->header;\n\t}\n\n\tfunction toStringCompact() {\n\t\treturn sprintf(\"<%s>:\\n%s\\n\",join(', ',$this->header),($this->toStringNodes()));\n\t}\n}\n\nclass merge extends MusicNode {\n\tfunction __construct($nodes=[]) {\n\t\tparent::__construct(\"merge\",$nodes);\n\t}\n\n\tfunction toStringCompact() {\n\t\treturn \"\".($this->toStringNodes()); //dejamos simplemente los corchetes.\n\t}\n\n\tfunction toStringSeparator() {\n\t\treturn \"\";\n\t}\n}\n\nclass note extends MusicNode {\n\tvar $note;\n\tvar $duration;\n\tvar $accidentalModifier;\n\tconst ACCIDENTAL_MODIFIER_NONE=-999;\n\n\tfunction __construct($note,$duration=1,$accidentalModifier=self::ACCIDENTAL_MODIFIER_NONE) {\n\t\tparent::__construct(\"note\");\t\t\n\t\t$this->note=$note;\n\t\t$this->duration=$duration;\n\t\t$this->accidentalModifier=$accidentalModifier;\n\t}\n\n\tfunction note() {\n\t\treturn $this->note;\n\t}\n\n\tfunction duration() {\n\t\treturn $this->duration;\n\t}\n\n\tfunction isSharp() {\n\t\treturn $this->accidentalModifier==1;\n\t}\n\n\tfunction sharpPrefix() {\n\t\treturn \"^\";\n\t}\n\n\tfunction isFlat() {\n\t\treturn $this->accidentalModifier==-1;\n\t}\n\n\tfunction flatPrefix() {\n\t\treturn \"_\";\n\t}\n\n\tfunction isNatural() {\n\t\treturn $this->accidentalModifier==0;\n\t}\n\n\tfunction naturalPrefix() {\n\t\treturn \"=\";\n\t}\n\n\tfunction hasAccidentals() {\n\t\treturn $this->isFlat() || $this->isNatural() || $this->isSharp();\n\t}\n\n\tfunction accidental() {\n\t\tif ($this->isFlat()) return $this->flatPrefix();\n\t\tif ($this->isSharp()) return $this->sharpPrefix();\n\t\tif ($this->isNatural()) return $this->naturalPRefix();\n\t\treturn \"\";\n\t}\n\n\tfunction toStringDuration() {\n\t\t$d=$this->duration;\n\t\tfor($i=2;$i<=64;$i++) {\n\t\t\tif ($d==1/$i) return \"/$i\";\t\t\n\t\t}\n\t\treturn $d==1 ? \"\" : \"\".$d;\n\t}\n\n\tfunction toStringComplementary() {\n\t\t$durationStr = $this->duration>1 ? $this->duration : \"\";\n\t\treturn sprintf(\"%s%s\",$this->accidental(),$this->note,$durationStr);\n\t}\n\n\tfunction toStringCompact() {\n\t\t$durationStr = $this->duration>1 ? $this->duration : \"\";\n\t\treturn sprintf(\"%s%s%s%s\",$this->accidental(),$this->note,$durationStr,$this->tag());\n\t}\n}\n\nclass rep extends MusicNode {\n\tvar $reps;\n\tfunction __construct($reps,$nodes=[]) {\n\t\tparent::__construct(\"rep\",$nodes);\n\t\t$this->reps=$reps;\n\t}\n\n\tfunction reps() {\n\t\treturn $this->reps;\n\t}\n\tfunction  toStringCompact() {\n\t\treturn sprintf(\"%s*%s\",$this->reps,$this->toStringNodes());\n\t}\n\n\tfunction toStringSeparator() {\n\t\treturn \"\";\n\t}\n}\n\nclass up8th extends MusicNode {\n\tfunction __construct($nodes=[]) {\n\t\tparent::__construct(\"up8th\",$nodes);\t\t\n\t}\n\n\tfunction  toStringCompact() {\n\t\treturn sprintf(\"8th+%s\",$this->toStringNodes());\n\t}\n}\n\nclass down8th extends MusicNode {\n\tfunction __construct($nodes=[]) {\n\t\tparent::__construct(\"down8th\",$nodes);\t\t\n\t}\n\n\tfunction  toStringCompact() {\n\t\treturn sprintf(\"8th-%s\",$this->toStringNodes());\n\t}\n}\n\nclass key extends MusicNode\t {\n\tvar $reps;\n\tfunction __construct($key,$nodes=[]) {\n\t\tparent::__construct(\"key\",$nodes);\n\t\t$this->key=$key;\n\t}\n\n\tfunction key() {\n\t\treturn $this->key;\n\t}\n\tfunction  toStringCompact() {\n\t\treturn sprintf(\"%s:%s\",$this->key,$this->toStringNodes());\n\t}\n\n\tfunction toStringSeparator() {\n\t\treturn \"\";\n\t}\n}\n\nclass tempo extends MusicNode {\n\tvar $beatNote,$beatsByMinute;\n\tfunction __construct($beatNote,$beatsByMinute,$nodes=[]) {\n\t\tparent::__construct(\"tempo\",$nodes);\n\t\t$this->beatNote;\n\t\t$this->beatsByMinute;\n\t}\n\tfunction beatNote() {\n\t\treturn $this->beatNote;\n\t}\n\tfunction beatsByMinute() {\n\t\treturn $this->beatsByMinute;\n\t}\n}\n\nclass parallel extends MusicNode {\n\tfunction __construct($nodes=[]) {\n\t\tparent::__construct(\"parallel\",$nodes);\n\t}\n}\n\nclass arp extends MusicNode {\n\tvar $orderPattern;\n\tvar $lengthInNotes;\n\n\tfunction __construct($orderPattern,$lengthInNotes,$nodes=[]) {\n\t\tparent::__construct(\"arp\",$nodes);\n\t\t$this->orderPattern=$orderPattern;\n\t\t$this->lengthInNotes=$lengthInNotes;\n\t}\t\n\n\tfunction chord() {\n\t\t$chord=$this->uniqueNode();\n\t\treturn $chord;\n\t}\n\n\tfunction orderPattern() {\n\t\treturn $this->orderPattern;\n\t}\n\n\tfunction lengthInNotes() {\n\t\treturn $this->lengthInNotes;\n\t}\n\n}\n\nfunction notes($s) {\n\t$nodes=array();\n\t$pattern=\"/([_=^]?[ABCDEFG](\\/?)[0-9]?)/\";\n\t$matches=array();\t\n\tpreg_match_all($pattern,$s,$matches);\t\n\tforeach($matches[0] as $match) {\n\t\t$note_match=array();\n\n\t\tpreg_match(\"/([_=^]?)([ABCDEFG])(\\/?)([0-9]?)/\",$match,$note_match);\n\t\t\n\t\t$accidentalModifier=note::ACCIDENTAL_MODIFIER_NONE;\n\t\tif ($note_match[1]==\"_\") $accidentalModifier=-1;\n\t\tif ($note_match[1]==\"=\") $accidentalModifier=0;\n\t\tif ($note_match[1]==\"^\") $accidentalModifier=1;\n\t\t$note=$note_match[2];\n\t\t$is_fraction=strlen($note_match[3])>0;\n\t\t$duration=$note_match[4];\n\t\tif (strlen($duration)==0) $duration=\"1\";\n\t\t$duration=$is_fraction ? 1/intval($duration) : intval($duration);\n\t\t\n\t\t$nodes[]=new note($note,$duration,$accidentalModifier);\t\t\n\t}\n\treturn new then($nodes);\n}\n\nfunction merge($m1,$m2) {\n\treturn new merge(array($m1,$m2));\n}\n\nfunction warn($msg) {\n\tglobal $warn_enabled;\n\tif ($warn_enabled) {\n\t\techo \"warning:$msg\\n\";\t\t\n\t}\n}\n\nfunction debug($msg){ \n\tglobal $debug_enabled;\n\t$debug_enabled=false;\n\tif ($debug_enabled) {\n\t\techo \"debug: $msg\\n\";\n\t}\n}\n\nfunction err($msg) {\n\t$fullMsg=\"error: $msg\\n\";\n\tthrow $fullMsg;\n }\n",
			"file": "nan/mm/mm.php",
			"file_size": 9992,
			"file_write_time": 132276913756800483,
			"settings":
			{
				"buffer_size": 9528,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "<?php\nnamespace nan\\mm;\n\nuse nan\\mm;\nuse nan\\mm\\abc;\nuse nan\\mm\\measure;\nuse nan\\mm\\transpose;\nuse nan\\mm\\arp;\nuse nan\\mm\\chord;\n\nrequire_once(\"autoloader.php\");\n\nnew mm\\MmNs();\nnew abc\\ABCNs();\nnew measure\\MeasureNs();\nnew reduce\\ReduceNs();\nnew arp\\ArpNs();\nnew chord\\ChordNs();\n\nfunction assert_equals($title,$a,$b) {\n\tif ($a==$b) {\n\t\tprint \"[PASS] $title\\n\";\n\t\treturn true;\n\t} else {\n\t\tprint \"[FAIL] $title ($a != $b)\\n\";\n\t\treturn false;\n\t}\n}\n\nfunction assert_abc_equals($title,$m,$abc) {\n\t$pass=assert_equals($title,(new abc\\AbcReducer())->reduce($m),$abc);\n\tif (!$pass) {\n\t\t$r=new abc\\AbcPrepareReducer();\n\t\t$mp=$r->reduce($m);\n\t\tprint \"failed-node-tree:\".($m->toStringTree()).\"\\n\";\n\t\tprint \"failed-node-prepared-tree:\".($mp->toStringTree()).\"\\n\";\n\t}\t\n}\n\nfunction test_note_then() {\n\tassert_abc_equals(\"test_note_then\",notes(\"AB\"),\"|AB\");\n}\n\nfunction test_note_sharp() {\n\tassert_abc_equals(\"test_note_sharp\",notes(\"A^B\"),\"|A^B\");\n}\n\nfunction test_note_natural() {\n\tassert_abc_equals(\"test_note_natural\",notes(\"A=B\"),\"|A=B\");\n}\n\nfunction test_note_fraction() {\n\tassert_abc_equals(\"test_note_fraction\",notes(\"A/2\"),\"|A/2\");\n}\n\nfunction test_note_fraction_2() {\n\tassert_abc_equals(\"test_note_fraction_2\",notes(\"A/3\"),\"|A/3\");\n}\n\nfunction test_note_flat() {\n\tassert_abc_equals(\"test_note_flat\",notes(\"A_B\"),\"|A_B\");\n}\n\nfunction test_measure_44() {\n\tassert_abc_equals(\"test_measure_44\",notes(\"ABCDEFGA\"),\"|ABCD|EFGA\");\t\n}\n\nfunction test_measure_factions() {\n\tassert_abc_equals(\"test_measure_fractions\",notes(\"A/2B/2CDEABCD\"),\"|A/2B/2CDE|ABCD\");\t\n}\n\nfunction test_measure_44_2() {\n\tassert_abc_equals(\"test_measure_44_2\",notes(\"E2F2G3DE4F4\")->wrap(new time(4,4)),\"M:4/4\\n|E2F2|G3D|E4|F4\");\t\n}\n\nfunction test_measure_34() {\n\tassert_abc_equals(\"test_measure_34\",notes(\"ABCDEFGA2\")->wrap(new time(3,4)),\"M:3/4\\n|ABC|DEF|GA2\");\t\n}\n\nfunction test_merge() {\n\tassert_abc_equals(\"test_merge\",\n\t\t(new merge())->addNode(notes(\"ABCD\"))->addNode(notes(\"DEFG\"))\n\t,\"|(ABCD);(DEFG)\");\t\n}\n\nfunction test_merge_2() {\n\tassert_abc_equals(\"test_merge_2\",\n\t\t(new merge())->addNode(notes(\"ABCDEFGA\"))->addNode(notes(\"DEFGABCD\"))\n\t,\"|(ABCD);(DEFG)|(EFGA);(ABCD)\");\t\n}\n\nfunction test_merge_3() {\n\tassert_abc_equals(\"test_merge_3\",\n\t\t(new merge())->addNode(notes(\"D4EFGA\"))->addNode(notes(\"DEFGA4\"))\n\t,\"|(D4);(DEFG)|(EFGA);(A4)\");\t\n}\n\nfunction test_up8th() {\n\tassert_abc_equals(\"test_up8th\",notes(\"ABCDEFGA\")->wrap(new up8th()),\"|A'B'C'D'|E'F'G'A'\");\t\n}\n\nfunction test_down8th() {\n\tassert_abc_equals(\"test_down8th\",notes(\"ABCDEFGA\")->wrap(new down8th()),\"|A,B,C,D,|E,F,G,A,\");\t\n}\n\nfunction test_arp() {\n\tassert_abc_equals(\"test_arp\",new arp([0,1,2,0],8,chord\\amchord(\"C\")),\"|CEGC|CEGC\");\n}\n\nfunction test_arp_2() {\n\tassert_abc_equals(\"test_arp_2\",(new arp([2,1,0,1,2,0],9,chord\\amchord(\"Dm\")))->wrap(new time(3,4)),\"M:3/4\\n|AFD|FAD|AFD\");\t\t\n}\n\nfunction main() {\n\ttest_note_then();\n\ttest_note_sharp();\n\ttest_note_natural();\n\ttest_note_flat();\n\ttest_note_fraction();\n\ttest_note_fraction_2();\n\ttest_up8th();\n\ttest_down8th();\n\ttest_measure_44();\n\ttest_measure_factions();\n\ttest_measure_44_2();\n\ttest_measure_34();\n\ttest_merge();\n\ttest_merge_2();\n\ttest_merge_3();\n\ttest_arp();\n\ttest_arp_2();\n}\n\nprint main();\n\n?>",
			"file": "test.php",
			"file_size": 3316,
			"file_write_time": 132276923608882502,
			"settings":
			{
				"buffer_size": 3181,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/mm"
	],
	"file_history":
	[
		"/C/mm/nan/mm/chord/chord.php",
		"/C/mm/nan/mm/mm.php",
		"/C/mm/nan_piano_ej1.php",
		"/C/mm/sample.abc",
		"/C/mm/nan/mm/reduce/reduce.php",
		"/C/mm/nan/mm/measure/measure.php",
		"/C/mm/test_midi..bat",
		"/C/mm/nan/mm/merge/merge.php",
		"/C/mm/nan/mm/transpose/transpose.php",
		"/C/mm/miditest.bat",
		"/C/mm/ej.abc",
		"/C/mm/nan_piano_ej1.bat",
		"/C/mm/autoloader.php",
		"/C/mm/test..bat",
		"/C/mm/test.php",
		"/C/mm/nan/abc/abc.php",
		"/C/mm/A/A.php",
		"/C/mm/B/B.php",
		"/C/mm/mm.php",
		"/C/mm/mm_abc.php",
		"/C/mm/mm_measure.php",
		"/C/mm/test2.php",
		"/C/Users/aspire/Desktop/trevisionempleado.sql",
		"/C/Users/aspire/Desktop/tareas-econ.txt",
		"/C/web/local.e-contratistas.com/sistema/reportes/form_utils.php",
		"/C/web/local.e-contratistas.com/sistema/reportes/informe_legajo_form.php",
		"/C/web/local.e-contratistas.com/sistema/reportes/informe_legajo.php",
		"/C/web/local.e-contratistas.com/sistema/datos/save_abmproveedor.php",
		"/C/web/local.e-contratistas.com/sistema/layout/layout_head.php",
		"/C/Users/aspire/Desktop/test-reaper.rpp",
		"/C/web/local.e-contratistas.com/sistema/layout/layout.php",
		"/C/web/local.e-contratistas.com/sistema/revision/save_abmrevisarproveedor.php",
		"/C/web/local.e-contratistas.com/sistema/revision/consultarrevisarproveedor.php",
		"/C/web/local.e-contratistas.com/sistema/datos/consultarproveedor.php",
		"/C/web/local.e-contratistas.com/sistema/datos/amproveedor.php",
		"/C/web/local.e-contratistas.com/sistema/revision/listarrevisarproveedores.php",
		"/C/web/local.e-contratistas.com/sistema/revision/amrevisarproveedor.php",
		"/C/web/local.e-contratistas.com/sistema/modulos/mod_schemaUpdater.php",
		"/C/web/local.e-contratistas.com/sistema/modulos/mod_excelsos.php",
		"/C/Users/aspire/Desktop/mm.java",
		"/C/web/local.e-contratistas.com/sistema/layout/layout_footer.php",
		"/C/web/local.e-contratistas.com/sistema/modulos/mod_formularios.php",
		"/C/web/local.e-contratistas.com/sistema/_tickets/20190719_Misleidy_MacroEmpleadoNoAutoriza/_ayuda.txt",
		"/C/web/local.e-contratistas.com/sistema/administracion/save_abmusuario.php",
		"/C/Users/aspire/Downloads/aaa.txt",
		"/C/web/local.e-contratistas.com/sistema/ingresar.php",
		"/C/web/local.e-contratistas.com/sistema/modulos/mod_mail.php",
		"/C/web/local.e-contratistas.com/sistema/datos/listarproveedores.php",
		"/C/web/local.e-contratistas.com/sistema/administracion/listarcontrolesempleados.php",
		"/C/web/local.e-contratistas.com/sistema/reportes/testsautomatizados.php",
		"/C/web/local.e-contratistas.com/sistema/funciones/login.php",
		"/C/web/local.e-contratistas.com/sistema/reportes/listartablerocontrol.php",
		"/C/Users/aspire/Downloads/tablero-de-control-20190731.235549.csv",
		"/C/web/local.e-contratistas.com/sistema/reportes/export_tablero_control.php",
		"/C/web/local.e-contratistas.com/sistema/modulos/mod_tokenizar.php",
		"/C/Users/aspire/Desktop/legajo.sql",
		"/C/web/local.e-contratistas.com/sistema/modulos/mod_queries.php",
		"/C/web/local.e-contratistas.com/sistema/datos/listarnominaempleados.php",
		"/C/web/local.e-contratistas.com/sistema/datos/consultarnominaempleado.php",
		"/C/web/local.e-contratistas.com/sistema/acceso/buscarautorizacion.php",
		"/C/web/local.e-contratistas.com/sistema/_tickets/000_hrancati_PendientesGenerales/_tareas.txt",
		"/C/web/local.e-contratistas.com/sistema/_tickets/20190912_misleidy_zarate_FalloAutorizacionAcceso/_ayuda.txt",
		"/C/web/local.e-contratistas.com/sistema/modulos/logicanegocio.php",
		"/C/web/local.e-contratistas.com/sistema/modulos/mod_vigencia.php",
		"/C/web/local.e-contratistas.com/sistema/administracion/save_abmperfil.php",
		"/C/Users/aspire/Desktop/test.html",
		"/C/web/local.e-contratistas.com/sistema/modulos/mod_conectorDB_settings.php",
		"/C/web/local.e-contratistas.com/sistema/revision/amrevisarempleado.php",
		"/C/Users/aspire/Desktop/LEGAJO_PORCENTAJEPARTICIPACION.sql",
		"/C/web/local.e-contratistas.com/sistema/_tickets/20190820_carlos_AltasZarteEnvianMailIsIncorrectos/_tareas.txt",
		"/C/web/local.e-contratistas.com/sistema/datos/save_abmcargamasiva.php",
		"/C/web/local.e-contratistas.com/sistema/datos/save_abmempleado.php",
		"/C/web/local.e-contratistas.com/sistema/_tickets/_000-hrancati-PendientesGenerales",
		"/C/web/local.e-contratistas.com/sistema/_tickets/20190802_CopiarPeriodosAClientesNuevos/_tareas.txt",
		"/C/web/local.e-contratistas.com/sistema/modulos/mod_debug_prefills.php",
		"/C/web/local.e-contratistas.com/sistema/modulos/mod_debug.php",
		"/C/Users/aspire/Desktop/legajo-proveedor.php",
		"/C/web/local.e-contratistas.com/sistema/reportes/forms_uils.php",
		"/C/web/local.e-contratistas.com/sistema/_tickets/20190701-cgarcia-ExportPanelControlVehiculos/_ayuda.txt",
		"/C/web/local.e-contratistas.com/sistema/reportes/consultartareastablerocontrol.php",
		"/C/web/local.e-contratistas.com/sistema/parametros/listaralertas.php",
		"/C/web/local.e-contratistas.com/sistema/parametros/amcontrol.php",
		"/C/web/local.e-contratistas.com/sistema/modulos/mod_urls.php",
		"/C/web/local.e-contratistas.com/sistema/modulos/mod_conectorDB.php",
		"/C/web/local.e-contratistas.com/sistema/funciones/blanqueoAutomatico.php",
		"/C/Users/aspire/Downloads/inicio-novedades-20190801.015758.csv",
		"/C/Users/aspire/Downloads/datos-nomina-de-transportes-de-carga-maquinarias-20190701.110622.csv",
		"/C/Users/aspire/Downloads/datos-nomina-de-transportes-de-carga-maquinarias-20190701.110048.csv",
		"/C/web/local.e-contratistas.com/sistema/datos/amempleado.php",
		"/C/web/local.e-contratistas.com/sistema/modulos/mod_errores.php",
		"/C/web/local.e-contratistas.com/sistema/modulos/mod_output_cache.php",
		"/C/web/local.e-contratistas.com/sistema/_tickets/20190531-carlos-ExportacionCsvMaquinarias/_ayuda.txt",
		"/C/Users/aspire/Downloads/datos-nomina-de-vehiculos-20190625.101502.csv",
		"/C/Users/aspire/Downloads/datos-nomina-de-transportes-de-carga-maquinarias-20190625.101525.csv",
		"/C/Users/aspire/Downloads/datos-nomina-de-vehiculos-20190625.095217.csv",
		"/C/Users/aspire/Downloads/datos-nomina-de-vehiculos-20190625.095838.csv",
		"/C/web/local.e-contratistas.com/sistema/parametros/save_abmdocumentoproveedorcatalogo.php",
		"/C/web/local.e-contratistas.com/sistema/parametros/listardocumentos.php",
		"/C/web/local.e-contratistas.com/sistema/reportes/listarpanelcontrol.php",
		"/C/web/local.e-contratistas.com/sistema/revision/save_abmsupervisarcierretarea.php",
		"/C/web/local.e-contratistas.com/sistema/revision/save_abmrevisarempleado.php",
		"/C/web/local.e-contratistas.com/sistema/revision/save_abmrealizartareavencida.php",
		"/C/web/local.e-contratistas.com/sistema/revision/save_abmrealizartarea.php",
		"/C/web/local.e-contratistas.com/sistema/revision/save_abmrealizarcierretarea.php",
		"/C/web/local.e-contratistas.com/sistema/revision/save_abmcorregirtarea.php",
		"/C/web/local.e-contratistas.com/sistema/planificacion/save_abmplanificacion.php",
		"/C/web/local.e-contratistas.com/sistema/planificacion/save_abmaprobarplanificacion.php",
		"/C/web/local.e-contratistas.com/sistema/parametros/save_abmsubservicio.php",
		"/C/web/local.e-contratistas.com/sistema/parametros/save_abmservicio.php",
		"/C/web/local.e-contratistas.com/sistema/parametros/save_abmriesgo.php",
		"/C/web/local.e-contratistas.com/sistema/parametros/save_abmsubcontrol.php",
		"/C/web/local.e-contratistas.com/sistema/parametros/save_abmregion.php",
		"/C/web/local.e-contratistas.com/sistema/parametros/save_abmperiodo.php",
		"/C/web/local.e-contratistas.com/sistema/parametros/save_abmgrupo.php",
		"/C/web/local.e-contratistas.com/sistema/parametros/save_abmdivision.php",
		"/C/web/local.e-contratistas.com/sistema/parametros/save_abmarea.php",
		"/C/web/local.e-contratistas.com/sistema/parametros/save_abmalerta.php",
		"/C/web/local.e-contratistas.com/sistema/opciones/save_chgpass.php",
		"/C/web/local.e-contratistas.com/sistema/opciones/save_chgdape.php",
		"/C/web/local.e-contratistas.com/sistema/inicio/save_abmasistencia.php",
		"/C/web/local.e-contratistas.com/sistema/documentacion/save_abmsolicitudvencida.php",
		"/C/web/local.e-contratistas.com/sistema/documentacion/save_abmsolicitud.php",
		"/C/web/local.e-contratistas.com/sistema/datos/save_consultarempleado.php",
		"/C/web/local.e-contratistas.com/sistema/datos/save_abmproveedorext.php",
		"/C/web/local.e-contratistas.com/sistema/administracion/save_abmtransaccion.php",
		"/C/web/local.e-contratistas.com/sistema/administracion/save_abmparametroseguridad.php",
		"/C/web/local.e-contratistas.com/sistema/administracion/save_abmdocumentoempleado.php",
		"/C/web/local.e-contratistas.com/sistema/administracion/save_abmdesbloqueousuario.php"
	],
	"find":
	{
		"height": 40.8
	},
	"find_in_files":
	{
		"height": 125.6,
		"where_history":
		[
			"C:\\web\\local.e-contratistas.com\\sistema",
			"C:\\web\\local.llcapacitacion.excelsos.com"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"print",
			"up8th",
			"namespace",
			"arp",
			"measure",
			"merge",
			"reduce",
			"duration",
			"fraction",
			"accidentals",
			"reduce(",
			"reduce",
			"abc_",
			"merge",
			"note",
			"TransposeReducer",
			"node_",
			"abc_rep",
			"up8th",
			"abc_measure",
			"abc_note",
			"toStringCompact",
			"nodes",
			"t:",
			"withNodes",
			"reduce",
			"notes",
			"abc_nodes(",
			"nodes",
			"merge",
			"8th",
			"new measure",
			"measure",
			"new measure",
			"measureWithContext",
			"mm",
			"quantity",
			"measure_time",
			" MeasureContext",
			" MeasureContext\n MeasureContext",
			" MeasureContext",
			"K:",
			"|",
			"\\nan\\mm",
			"nan\\mm",
			"mm\\",
			"\\nan\\mm",
			"mm_",
			"measure",
			"mm_abc(",
			"mm_ab",
			"4*",
			"debug",
			"abc_measure",
			"mm_abc_nodes",
			"mm_abc",
			"mm_measure",
			"mm_time",
			"duration",
			"mm_measure",
			"mm_measure_header",
			"then",
			"mm_rep",
			"}",
			"rep",
			"update",
			"VACIO",
			"guarda",
			"actualizarDatosProveedor",
			"setupDocumentosAlta",
			"setupDocumentosAltaCarga",
			"setupDocumentosAlta",
			"consultarDocumentosProveedorCatalogo",
			"\tfunction consultarDocumentosProveedorCatalogo($conectorDB,$idProveedor) {",
			"\tfunction consultarDocumentosProveedorCatalogo($conectorDB,$idProveedor) {\nguardarDocumentosProveedor",
			"guardarDocumentosProveedor",
			"guardarRevisionProveedor",
			"submit",
			"ver_detalle",
			"actualizarDatosProveedor",
			"guardarRevisionProveedor",
			"setupDocumentosAltaCarga",
			"IDDOCUMENTOPROVEEDORCATALOGO",
			"setupDocumentosAltaCarga",
			"consultarDocumentoProveedor",
			"function campoArchivoConVigenciaSimple",
			"AltaCarga",
			"altacarga",
			"documentoProveedorCatalogo",
			"documentoProve",
			"consultarDocumentosProveedorCatalogo",
			"setupDocumentosAltaCarga",
			"documentosAlta",
			"<<<<",
			">>>",
			"consultarDocumentosProveedorCatalogo",
			"setupDocu",
			"function campoCheck",
			"setupDocumentosAlta",
			"function leyenda_autorizacion",
			"setupDoc",
			"consultarDocumentosProveedorCatalogo",
			"setupDocumentosAlta",
			"consutarDocumentosProveedor",
			"v",
			".php",
			".PHP",
			"consultarListadoComentarios",
			"v",
			"listarre",
			"registrarActivoLog",
			"Ocult",
			"consultarDatosEmpleadoProveedor",
			"IDREVISIONPRO",
			"consultarDatosEmpleadoProveedor",
			"camposEmpleadoRevision",
			"z",
			"v=",
			"acomodar",
			"actualizarDatosProveedor",
			"consutarDocumentosProveedor($conectorDB, $idPr",
			"consutarDocumentosProveedor($conectorDB, $idProveedor)",
			"guardarEstadoDocumentosProveedor",
			"guardarRevisionProveedor",
			"consultarDocumentosProveedorCatalogo",
			"v",
			"obtenerRegistro",
			"consultarDocumentosProveedorCatalogo"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"reduce_",
			"",
			"mm",
			"",
			"\"opciones\"=>opciones_documento()",
			"opciones_documento()",
			"sino",
			"monto",
			"svn up ",
			"include_once (\"../modulos/mod_errores.php\");",
			"git add "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "C:\\mm"
		}
	],
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "nan/mm/abc/abc.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4208,
						"regions":
						{
						},
						"selection":
						[
							[
								2880,
								2880
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2376.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "nan/mm/transpose/transpose.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1460,
						"regions":
						{
						},
						"selection":
						[
							[
								520,
								520
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 513.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "nan/mm/merge/merge.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 560,
						"regions":
						{
						},
						"selection":
						[
							[
								157,
								157
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "nan/mm/arp/arp.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 507,
						"regions":
						{
						},
						"selection":
						[
							[
								206,
								206
							]
						],
						"settings":
						{
							"auto_name": "",
							"syntax": "Packages/PHP/PHP.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "nan/mm/chord/chord.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1036,
						"regions":
						{
						},
						"selection":
						[
							[
								718,
								718
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 208.8,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "nan/mm/mm.php",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 9528,
						"regions":
						{
						},
						"selection":
						[
							[
								8773,
								8773
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 7828.8,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "test.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3181,
						"regions":
						{
						},
						"selection":
						[
							[
								2633,
								2633
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 285.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 46.4
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"C:\\web\\local.llcapacitacion.excelsos.com\\local.llcapacitacion.excelsos.sublime-workspace"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 172.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
